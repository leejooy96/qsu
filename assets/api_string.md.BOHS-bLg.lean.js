import{_ as n,c as r,j as a,a as i,G as e,a2 as l,B as p,o as h}from"./chunks/framework.BQmytedh.js";const z=JSON.parse('{"title":"String","description":"","frontmatter":{"title":"String","order":3},"headers":[],"relativePath":"api/string.md","filePath":"en/api/string.md","lastUpdated":1733444151000}'),d={name:"api/string.md"},k={id:"trim",tabindex:"-1"},o={id:"removespecialchar",tabindex:"-1"},g={id:"removenewline",tabindex:"-1"},E={id:"replacebetween",tabindex:"-1"},u={id:"capitalizefirst",tabindex:"-1"},c={id:"capitalizeeverysentence",tabindex:"-1"},y={id:"capitalizeeachwords",tabindex:"-1"},m={id:"strcount",tabindex:"-1"},b={id:"strshuffle",tabindex:"-1"},F={id:"strrandom",tabindex:"-1"},x={id:"strblindrandom",tabindex:"-1"},v={id:"truncate",tabindex:"-1"},C={id:"truncateexpect",tabindex:"-1"},f={id:"split",tabindex:"-1"},B={id:"strunique",tabindex:"-1"},q={id:"strtoascii",tabindex:"-1"},D={id:"urljoin",tabindex:"-1"};function P(R,s,A,S,w,j){const t=p("Badge");return h(),r("div",null,[s[68]||(s[68]=a("h1",{id:"api-string",tabindex:"-1"},[i("API: String "),a("a",{class:"header-anchor",href:"#api-string","aria-label":'Permalink to "API: String"'},"​")],-1)),a("h2",k,[s[0]||(s[0]=a("code",null,"trim",-1)),s[1]||(s[1]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[2]||(s[2]=i()),s[3]||(s[3]=a("a",{class:"header-anchor",href:"#trim","aria-label":'Permalink to "`trim` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[69]||(s[69]=l(`<p>Removes all whitespace before and after a string. Unlike JavaScript&#39;s <code>trim</code> function, it converts two or more spaces between sentences into a single space.</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li></ul><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; Hello Wor  ld  &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;Hello Wor ld&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;H e l l o     World&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;H e l l o World&#39;</span></span></code></pre></div>`,7)),a("h2",o,[s[4]||(s[4]=a("code",null,"removeSpecialChar",-1)),s[5]||(s[5]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[6]||(s[6]=i()),s[7]||(s[7]=a("a",{class:"header-anchor",href:"#removespecialchar","aria-label":'Permalink to "`removeSpecialChar` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[70]||(s[70]=l(`<p>Returns after removing all special characters, including spaces. If you want to allow any special characters as exceptions, list them in the second argument value without delimiters. For example, if you want to allow spaces and the symbols <code>&amp;</code> and <code>*</code>, the second argument value would be &#39; &amp;*&#39;.</p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li><li><code>exceptionCharacters::string?</code> <span class="named">Dart:Named</span></li></ul><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-1" tabindex="-1">Examples <a class="header-anchor" href="#examples-1" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeSpecialChar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello-qsu, World!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;HelloqsuWorld&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeSpecialChar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello-qsu, World!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; -&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;Hello-qsu World&#39;</span></span></code></pre></div><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeSpecialChar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello-qsu, World!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;HelloqsuWorld&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeSpecialChar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello-qsu, World!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, exceptionCharacters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39; -&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;Hello-qsu World&#39;</span></span></code></pre></div>`,8)),a("h2",g,[s[8]||(s[8]=a("code",null,"removeNewLine",-1)),s[9]||(s[9]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[10]||(s[10]=i()),s[11]||(s[11]=a("a",{class:"header-anchor",href:"#removenewline","aria-label":'Permalink to "`removeNewLine` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[71]||(s[71]=l(`<p>Removes <code>\\n</code>, <code>\\r</code> characters or replaces them with specified characters.</p><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li><li><code>replaceTo::string || &#39;&#39;</code> <span class="named">Dart:Named</span></li></ul><h3 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-2" tabindex="-1">Examples <a class="header-anchor" href="#examples-2" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeNewLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;abcd&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeNewLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;-&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;ab-cd&#39;</span></span></code></pre></div><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeNewLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;abcd&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeNewLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, replaceTo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;-&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;ab-cd&#39;</span></span></code></pre></div>`,8)),a("h2",E,[s[12]||(s[12]=a("code",null,"replaceBetween",-1)),s[13]||(s[13]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[14]||(s[14]=i()),s[15]||(s[15]=a("a",{class:"header-anchor",href:"#replacebetween","aria-label":'Permalink to "`replaceBetween` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[72]||(s[72]=l(`<p>Replaces text within a range starting and ending with a specific character in a given string with another string. For example, given the string <code>abc&lt;DEF&gt;ghi</code>, to change <code>&lt;DEF&gt;</code> to <code>def</code>, use <code>replaceBetween(&#39;abc&lt;DEF&gt;ghi&#39;, &#39;&lt;&#39;, &#39;&gt;&#39;, &#39;def&#39;)</code>. The result would be <code>abcdefghi</code>.</p><p>Deletes strings in the range if <code>replaceWith</code> is not specified.</p><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li><li><code>startChar::string</code></li><li><code>endChar::string</code></li><li><code>replaceWith::string || &#39;&#39;</code></li></ul><h3 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-3" tabindex="-1">Examples <a class="header-anchor" href="#examples-3" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceBetween</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ab[c]d[e]f&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;abdf&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceBetween</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abcd:replace:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;e&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;abcde&#39;</span></span></code></pre></div>`,8)),a("h2",u,[s[16]||(s[16]=a("code",null,"capitalizeFirst",-1)),s[17]||(s[17]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[18]||(s[18]=i()),s[19]||(s[19]=a("a",{class:"header-anchor",href:"#capitalizefirst","aria-label":'Permalink to "`capitalizeFirst` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[73]||(s[73]=l('<p>Converts the first letter of the entire string to uppercase and returns.</p><h3 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li></ul><h3 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-4" tabindex="-1">Examples <a class="header-anchor" href="#examples-4" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">capitalizeFirst</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abcd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;Abcd&#39;</span></span></code></pre></div>',7)),a("h2",c,[s[20]||(s[20]=a("code",null,"capitalizeEverySentence",-1)),s[21]||(s[21]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[22]||(s[22]=i()),s[23]||(s[23]=a("a",{class:"header-anchor",href:"#capitalizeeverysentence","aria-label":'Permalink to "`capitalizeEverySentence` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[74]||(s[74]=l(`<p>Capitalize the first letter of every sentence. Typically, the <code>.</code> characters to separate sentences, but this can be customized via the value of the <code>splitChar</code> argument.</p><h3 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li><li><code>splitChar::string</code> <span class="named">Dart:Named</span></li></ul><h3 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-5" tabindex="-1">Examples <a class="header-anchor" href="#examples-5" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">capitalizeEverySentence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello. world. hi.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;Hello. World. Hi.&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">capitalizeEverySentence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello!world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;Hello!World&#39;</span></span></code></pre></div><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">capitalizeEverySentence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello. world. hi.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;Hello. World. Hi.&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">capitalizeEverySentence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello!world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, splitChar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;Hello!World&#39;</span></span></code></pre></div>`,8)),a("h2",y,[s[24]||(s[24]=a("code",null,"capitalizeEachWords",-1)),s[25]||(s[25]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[26]||(s[26]=i()),s[27]||(s[27]=a("a",{class:"header-anchor",href:"#capitalizeeachwords","aria-label":'Permalink to "`capitalizeEachWords` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[75]||(s[75]=l('<p>Converts every word with spaces to uppercase. If the naturally argument is true, only some special cases (such as prepositions) are kept lowercase.</p><h3 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li><li><code>natural::boolean || false</code> <span class="named">Dart:Named</span></li></ul><h3 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-6" tabindex="-1">Examples <a class="header-anchor" href="#examples-6" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">capitalizeEachWords</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abcd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;Abcd&#39;</span></span></code></pre></div>',7)),a("h2",m,[s[28]||(s[28]=a("code",null,"strCount",-1)),s[29]||(s[29]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[30]||(s[30]=i()),s[31]||(s[31]=a("a",{class:"header-anchor",href:"#strcount","aria-label":'Permalink to "`strCount` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[76]||(s[76]=l('<p>Returns the number of times the second String argument is contained in the first String argument.</p><h3 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li><li><code>search::string</code></li></ul><h3 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>number</p></blockquote><h3 id="examples-7" tabindex="-1">Examples <a class="header-anchor" href="#examples-7" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abcabc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns 2</span></span></code></pre></div>',7)),a("h2",b,[s[32]||(s[32]=a("code",null,"strShuffle",-1)),s[33]||(s[33]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[34]||(s[34]=i()),s[35]||(s[35]=a("a",{class:"header-anchor",href:"#strshuffle","aria-label":'Permalink to "`strShuffle` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[77]||(s[77]=l('<p>Randomly shuffles the received string and returns it.</p><h3 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li></ul><h3 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-8" tabindex="-1">Examples <a class="header-anchor" href="#examples-8" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strShuffle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abcdefg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;bgafced&#39;</span></span></code></pre></div>',7)),a("h2",F,[s[36]||(s[36]=a("code",null,"strRandom",-1)),s[37]||(s[37]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[38]||(s[38]=i()),s[39]||(s[39]=a("a",{class:"header-anchor",href:"#strrandom","aria-label":'Permalink to "`strRandom` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[78]||(s[78]=l('<p>Returns a random String containing numbers or uppercase and lowercase letters of the given length. The default return length is 12.</p><h3 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>length::number</code></li><li><code>additionalCharacters::string?</code> <span class="named">Dart:Named</span></li></ul><h3 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-9" tabindex="-1">Examples <a class="header-anchor" href="#examples-9" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;CHy2M&#39;</span></span></code></pre></div>',7)),a("h2",x,[s[40]||(s[40]=a("code",null,"strBlindRandom",-1)),s[41]||(s[41]=i()),e(t,{type:"tip",text:"JavaScript"}),s[42]||(s[42]=i()),s[43]||(s[43]=a("a",{class:"header-anchor",href:"#strblindrandom","aria-label":'Permalink to "`strBlindRandom` <Badge type="tip" text="JavaScript" />"'},"​",-1))]),s[79]||(s[79]=l('<p>Replace strings at random locations with a specified number of characters (default 1) with characters (default *).</p><h3 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li><li><code>blindLength::number</code></li><li><code>blindStr::string || &#39;*&#39;</code></li></ul><h3 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-10" tabindex="-1">Examples <a class="header-anchor" href="#examples-10" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strBlindRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;#el#o&#39;</span></span></code></pre></div>',7)),a("h2",v,[s[44]||(s[44]=a("code",null,"truncate",-1)),s[45]||(s[45]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[46]||(s[46]=i()),s[47]||(s[47]=a("a",{class:"header-anchor",href:"#truncate","aria-label":'Permalink to "`truncate` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[80]||(s[80]=l(`<p>Truncates a long string to a specified length, optionally appending an ellipsis after the string.</p><h3 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li><li><code>length::number</code></li><li><code>ellipsis::string || &#39;&#39;</code> <span class="named">Dart:Named</span></li></ul><h3 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-11" tabindex="-1">Examples <a class="header-anchor" href="#examples-11" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;hel&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;he...&#39;</span></span></code></pre></div><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;hel&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ellipsis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;he...&#39;</span></span></code></pre></div>`,8)),a("h2",C,[s[48]||(s[48]=a("code",null,"truncateExpect",-1)),s[49]||(s[49]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[50]||(s[50]=i()),s[51]||(s[51]=a("a",{class:"header-anchor",href:"#truncateexpect","aria-label":'Permalink to "`truncateExpect` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[81]||(s[81]=l(`<p>The string ignores truncation until the ending character (<code>endStringChar</code>). If the expected length is reached, return the truncated string until after the ending character.</p><h3 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li><li><code>expectLength::number</code></li><li><code>endStringChar::string || &#39;.&#39;</code> <span class="named">Dart:Named</span></li></ul><h3 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-12" tabindex="-1">Examples <a class="header-anchor" href="#examples-12" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncateExpect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello. this is test string.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;hello. this is test string.&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncateExpect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello-this-is-test-string-bye&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;-&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;hello-this-is-&#39;</span></span></code></pre></div>`,7)),a("h2",f,[s[52]||(s[52]=a("code",null,"split",-1)),s[53]||(s[53]=i()),e(t,{type:"tip",text:"JavaScript"}),s[54]||(s[54]=i()),s[55]||(s[55]=a("a",{class:"header-anchor",href:"#split","aria-label":'Permalink to "`split` <Badge type="tip" text="JavaScript" />"'},"​",-1))]),s[82]||(s[82]=l(`<p>Splits a string based on the specified character and returns it as an Array. Unlike the existing split, it splits the values provided as multiple parameters (array or multiple arguments) at once.</p><h3 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li><li><code>splitter::string||string[]||...string</code></li></ul><h3 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string[]</p></blockquote><h3 id="examples-13" tabindex="-1">Examples <a class="header-anchor" href="#examples-13" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello% js world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;% &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns [&#39;hello&#39;, &#39;js world&#39;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello,js,world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;,&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns [&#39;hello&#39;, &#39;js&#39;, &#39;world&#39;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello%js,world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;,&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns [&#39;hello&#39;, &#39;js&#39;, &#39;world&#39;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello%js,world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;,&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns [&#39;hello&#39;, &#39;js&#39;, &#39;world&#39;]</span></span></code></pre></div>`,7)),a("h2",B,[s[56]||(s[56]=a("code",null,"strUnique",-1)),s[57]||(s[57]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[58]||(s[58]=i()),s[59]||(s[59]=a("a",{class:"header-anchor",href:"#strunique","aria-label":'Permalink to "`strUnique` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[83]||(s[83]=l('<p>Remove duplicate characters from a given string and output only one.</p><h3 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li></ul><h3 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-14" tabindex="-1">Examples <a class="header-anchor" href="#examples-14" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strUnique</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;aaabbbcc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;abc&#39;</span></span></code></pre></div>',7)),a("h2",q,[s[60]||(s[60]=a("code",null,"strToAscii",-1)),s[61]||(s[61]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[62]||(s[62]=i()),s[63]||(s[63]=a("a",{class:"header-anchor",href:"#strtoascii","aria-label":'Permalink to "`strToAscii` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[84]||(s[84]=l('<p>Converts the given string to ascii code and returns it as an array.</p><h3 id="parameters-15" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-15" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>str::string</code></li></ul><h3 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>number[]</p></blockquote><h3 id="examples-15" tabindex="-1">Examples <a class="header-anchor" href="#examples-15" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strToAscii</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;12345&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns [49, 50, 51, 52, 53]</span></span></code></pre></div>',7)),a("h2",D,[s[64]||(s[64]=a("code",null,"urlJoin",-1)),s[65]||(s[65]=i()),e(t,{type:"tip",text:"JavaScript"}),e(t,{type:"info",text:"Dart"}),s[66]||(s[66]=i()),s[67]||(s[67]=a("a",{class:"header-anchor",href:"#urljoin","aria-label":'Permalink to "`urlJoin` <Badge type="tip" text="JavaScript" /><Badge type="info" text="Dart" />"'},"​",-1))]),s[85]||(s[85]=l('<p>Merges the given string argument with the first argument (the beginning of the URL), joining it so that the slash (<code>/</code>) symbol is correctly included.</p><p>In Dart, accepts only one argument, organized as an List.</p><h3 id="parameters-16" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-16" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>args::...any[]</code> (JavaScript)</li><li><code>args::List&lt;dynamic&gt;</code> (Dart)</li></ul><h3 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><blockquote><p>string</p></blockquote><h3 id="examples-16" tabindex="-1">Examples <a class="header-anchor" href="#examples-16" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">urlJoin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;https://example.com/hello/world&#39;</span></span></code></pre></div><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">urlJoin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;https://example.com/hello/world&#39;</span></span></code></pre></div>',9))])}const W=n(d,[["render",P]]);export{z as __pageData,W as default};
